package warcraftTD.Levels;

import warcraftTD.Assets;
import warcraftTD.Position;
import warcraftTD.Tiles.Decor;
import warcraftTD.Tiles.Empty;
import warcraftTD.Tiles.Road;

public class Level4 extends Level {
    public Level4() {
        super();
        spritePath = Assets.level4;

        // remplie la liste de points par lequel les Bloons vont passer dans l'ordre.

        pathing.add(new Position(0, 0.44305555555555554));
        pathing.add(new Position(0.07661290322580645, 0.5194444444444444));
        pathing.add(new Position(0.10564516129032259, 0.6736111111111112));
        pathing.add(new Position(0.11048387096774194, 0.8402777777777778));
        pathing.add(new Position(0.20080645161290323, 0.9625));
        pathing.add(new Position(0.3379032258064516, 0.8513888888888889));
        pathing.add(new Position(0.4088709677419355, 0.7513888888888889));
        pathing.add(new Position(0.5435483870967742, 0.8013888888888889));
        pathing.add(new Position(0.682258064516129, 0.7861111111111111));
        pathing.add(new Position(0.6758064516129032, 0.5958333333333333));
        pathing.add(new Position(0.5298387096774193, 0.47777777777777775));
        pathing.add(new Position(0.4241935483870968, 0.5055555555555555));
        pathing.add(new Position(0.25564516129032255, 0.4180555555555555));
        pathing.add(new Position(0.21774193548387097, 0.2319444444444444));
        pathing.add(new Position(0.2991935483870968, 0.03555555555555558));
        pathing.add(new Position(0.4870967741935484, 0.010277777777777746));
        pathing.add(new Position(0.5717741935483871, 0.22777777777777775));
        pathing.add(new Position(0.707258064516129, 0.34444444444444444));
        pathing.add(new Position(0.8048387096774193, 0.35138888888888886));
        pathing = roundPath(pathing, 3);

        // remplie la map de vide,d'obstacles ou de route...

        road[0][9] = true;
        road[0][8] = true;
        road[0][7] = true;
        road[0][6] = true;
        road[1][6] = true;
        road[1][7] = true;
        road[1][8] = true;
        road[1][9] = true;
        road[2][9] = true;
        road[2][8] = true;
        road[2][7] = true;
        road[2][10] = true;
        road[2][11] = true;
        road[3][11] = true;
        road[3][10] = true;
        road[3][9] = true;
        road[4][10] = true;
        road[4][11] = true;
        road[4][12] = true;
        road[3][12] = true;
        road[2][12] = true;
        road[2][13] = true;
        road[3][13] = true;
        road[4][13] = true;
        road[4][14] = true;
        road[3][14] = true;
        road[2][14] = true;
        road[2][15] = true;
        road[3][15] = true;
        road[4][15] = true;
        road[4][16] = true;
        road[3][16] = true;
        road[4][17] = true;
        road[5][17] = true;
        road[5][16] = true;
        road[6][16] = true;
        road[6][17] = true;
        road[7][17] = true;
        road[7][16] = true;
        road[8][16] = true;
        road[8][17] = true;
        road[9][17] = true;
        road[9][16] = true;
        road[9][15] = true;
        road[8][15] = true;
        road[9][14] = true;
        road[10][14] = true;
        road[10][15] = true;
        road[10][16] = true;
        road[10][17] = true;
        road[11][16] = true;
        road[11][15] = true;
        road[11][14] = true;
        road[11][13] = true;
        road[12][13] = true;
        road[12][14] = true;
        road[12][15] = true;
        road[13][14] = true;
        road[13][13] = true;
        road[14][13] = true;
        road[14][14] = true;
        road[15][14] = true;
        road[15][13] = true;
        road[16][13] = true;
        road[16][14] = true;
        road[16][15] = true;
        road[17][15] = true;
        road[18][15] = true;
        road[18][14] = true;
        road[17][14] = true;
        road[17][13] = true;
        road[18][13] = true;
        road[19][13] = true;
        road[19][14] = true;
        road[19][15] = true;
        road[20][15] = true;
        road[20][14] = true;
        road[21][14] = true;
        road[21][13] = true;
        road[20][13] = true;
        road[20][12] = true;
        road[21][12] = true;
        road[21][11] = true;
        road[20][11] = true;
        road[20][10] = true;
        road[21][10] = true;
        road[20][9] = true;
        road[19][9] = true;
        road[19][10] = true;
        road[18][10] = true;
        road[18][9] = true;
        road[18][8] = true;
        road[17][8] = true;
        road[17][9] = true;
        road[17][10] = true;
        road[16][9] = true;
        road[16][8] = true;
        road[16][7] = true;
        road[15][7] = true;
        road[15][8] = true;
        road[15][9] = true;
        road[14][9] = true;
        road[14][8] = true;
        road[13][8] = true;
        road[13][9] = true;
        road[12][9] = true;
        road[12][8] = true;
        road[11][8] = true;
        road[11][9] = true;
        road[11][10] = true;
        road[12][10] = true;
        road[10][10] = true;
        road[10][9] = true;
        road[10][8] = true;
        road[9][8] = true;
        road[9][9] = true;
        road[9][7] = true;
        road[8][7] = true;
        road[8][8] = true;
        road[7][7] = true;
        road[8][6] = true;
        road[7][6] = true;
        road[6][6] = true;
        road[6][5] = true;
        road[7][5] = true;
        road[7][4] = true;
        road[6][4] = true;
        road[6][3] = true;
        road[7][3] = true;
        road[8][3] = true;
        road[8][2] = true;
        road[7][2] = true;
        road[7][1] = true;
        road[8][1] = true;
        road[8][0] = true;
        road[9][0] = true;
        road[9][1] = true;
        road[10][1] = true;
        road[10][0] = true;
        road[11][0] = true;
        road[11][1] = true;
        road[12][1] = true;
        road[12][0] = true;
        road[13][0] = true;
        road[13][1] = true;
        road[14][0] = true;
        road[14][1] = true;
        road[15][1] = true;
        road[15][0] = true;
        road[16][0] = true;
        road[16][1] = true;
        road[16][2] = true;
        road[15][2] = true;
        road[16][3] = true;
        road[17][2] = true;
        road[17][3] = true;
        road[17][4] = true;
        road[18][4] = true;
        road[18][3] = true;
        road[19][4] = true;
        road[18][5] = true;
        road[19][5] = true;
        road[19][6] = true;
        road[20][6] = true;
        road[20][5] = true;
        road[20][4] = true;
        road[21][4] = true;
        road[21][5] = true;
        road[21][6] = true;
        road[22][6] = true;
        road[22][5] = true;
        road[23][5] = true;
        road[23][6] = true;
        road[24][6] = true;
        road[24][5] = true;
        road[5][4] = true;
        road[13][10] = true;
        road[15][15] = true;
        road[19][3] = true;
        road[19][11] = true;
        for (int y = 0; y < nbSquareY; y++) {
            for (int x = 0; x < nbSquareX; x++) {
                if (map[x][y] == null)
                    if (road[x][y])
                        map[x][y] = new Road(x, y);
                    else if (decor[x][y])
                        map[x][y] = new Decor(x, y);
                    else
                        map[x][y] = new Empty(x, y);
            }
        }
    }

}
